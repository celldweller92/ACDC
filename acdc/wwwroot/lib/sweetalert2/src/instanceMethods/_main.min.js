/**
 * Minified by jsDelivr using Terser v5.3.5.
 * Original file: /npm/sweetalert2@10.15.5/src/instanceMethods/_main.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import defaultParams,{showWarningsForParams}from"../utils/params.js";import*as dom from"../utils/dom/index.js";import{swalClasses}from"../utils/classes.js";import Timer from"../utils/Timer.js";import{callIfFunction}from"../utils/utils.js";import setParameters from"../utils/setParameters.js";import{getTemplateParams}from"../utils/getTemplateParams.js";import globalState from"../globalState.js";import{openPopup}from"../utils/openPopup.js";import privateProps from"../privateProps.js";import privateMethods from"../privateMethods.js";import{handleInputOptionsAndValue}from"../utils/dom/inputUtils.js";import{handleConfirmButtonClick,handleDenyButtonClick,handleCancelButtonClick}from"./buttons-handlers.js";import{addKeydownHandler,setFocus}from"./keydown-handler.js";import{handlePopupClick}from"./popup-click-handler.js";import{DismissReason}from"../utils/DismissReason.js";export function _main(t,e={}){showWarningsForParams(Object.assign({},e,t)),globalState.currentInstance&&globalState.currentInstance._destroy(),globalState.currentInstance=this;const o=prepareParams(t,e);setParameters(o),Object.freeze(o),globalState.timeout&&(globalState.timeout.stop(),delete globalState.timeout),clearTimeout(globalState.restoreFocusTimeout);const s=populateDomCache(this);return dom.render(this,o),privateProps.innerParams.set(this,o),swalPromise(this,s,o)}const prepareParams=(t,e)=>{const o=getTemplateParams(t),s=Object.assign({},defaultParams.showClass,e.showClass,o.showClass,t.showClass),a=Object.assign({},defaultParams.hideClass,e.hideClass,o.hideClass,t.hideClass),n=Object.assign({},defaultParams,e,o,t);return n.showClass=s,n.hideClass=a,!1===t.animation&&(n.showClass={popup:"swal2-noanimation",backdrop:"swal2-noanimation"},n.hideClass={}),n},swalPromise=(t,e,o)=>new Promise((s=>{const a=e=>{t.closePopup({isDismissed:!0,dismiss:e})};privateMethods.swalPromiseResolve.set(t,s),e.confirmButton.onclick=()=>handleConfirmButtonClick(t,o),e.denyButton.onclick=()=>handleDenyButtonClick(t,o),e.cancelButton.onclick=()=>handleCancelButtonClick(t,a),e.closeButton.onclick=()=>a(DismissReason.close),handlePopupClick(t,e,a),addKeydownHandler(t,globalState,o,a),o.toast&&(o.input||o.footer||o.showCloseButton)?dom.addClass(document.body,swalClasses["toast-column"]):dom.removeClass(document.body,swalClasses["toast-column"]),handleInputOptionsAndValue(t,o),openPopup(o),setupTimer(globalState,o,a),initFocus(e,o),setTimeout((()=>{e.container.scrollTop=0}))})),populateDomCache=t=>{const e={popup:dom.getPopup(),container:dom.getContainer(),content:dom.getContent(),actions:dom.getActions(),confirmButton:dom.getConfirmButton(),denyButton:dom.getDenyButton(),cancelButton:dom.getCancelButton(),loader:dom.getLoader(),closeButton:dom.getCloseButton(),validationMessage:dom.getValidationMessage(),progressSteps:dom.getProgressSteps()};return privateProps.domCache.set(t,e),e},setupTimer=(t,e,o)=>{const s=dom.getTimerProgressBar();dom.hide(s),e.timer&&(t.timeout=new Timer((()=>{o("timer"),delete t.timeout}),e.timer),e.timerProgressBar&&(dom.show(s),setTimeout((()=>{t.timeout&&t.timeout.running&&dom.animateTimerProgressBar(e.timer)}))))},initFocus=(t,e)=>{if(!e.toast)return callIfFunction(e.allowEnterKey)?void(focusButton(t,e)||setFocus(e,-1,1)):blurActiveElement()},focusButton=(t,e)=>e.focusDeny&&dom.isVisible(t.denyButton)?(t.denyButton.focus(),!0):e.focusCancel&&dom.isVisible(t.cancelButton)?(t.cancelButton.focus(),!0):!(!e.focusConfirm||!dom.isVisible(t.confirmButton))&&(t.confirmButton.focus(),!0),blurActiveElement=()=>{document.activeElement&&"function"==typeof document.activeElement.blur&&document.activeElement.blur()};
//# sourceMappingURL=/sm/cbdad41a9eb136cffa468173bf0e91c9f1a76f6bf014bd7794ee90371fc55e9a.map